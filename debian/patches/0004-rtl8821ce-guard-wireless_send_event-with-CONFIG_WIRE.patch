From 68c4f756267fa22680b77429abad586fc83b2baa Mon Sep 17 00:00:00 2001
From: You-Sheng Yang <vicamo@gmail.com>
Date: Mon, 17 Feb 2020 21:23:04 +0800
Subject: [PATCH] rtl8821ce: guard wireless_send_event with CONFIG_WIRELESS_EXT
 instead

wireless_send_event() is an API when kernel CONFIG_WEXT_CORE is enabled,
which depends on either CONFIG_WIRELESS_EXT or CONFIG_CFG80211_WEXT. In
this source package, it's only enabled when CONFIG_IOCTL_CFG80211 is not
defined. While compiled on Ubuntu s390x, there is no wireless stack
enabled so far, so both CONFIG_IOCTL_CFG80211 and CONFIG_WIRELESS_EXT is
not defined in Makefile in this case. By guarding wireless_send_event()
with CONFIG_WIRELESS_EXT instead, it fixes build failure on s390x.

Signed-off-by: You-Sheng Yang <vicamo@gmail.com>
---
 os_dep/linux/ioctl_linux.c | 24 ++++++++++++------------
 os_dep/linux/mlme_linux.c  |  6 +++---
 os_dep/linux/recv_linux.c  |  2 +-
 3 files changed, 16 insertions(+), 16 deletions(-)

diff --git a/os_dep/linux/ioctl_linux.c b/os_dep/linux/ioctl_linux.c
index f169dc9..f3220d5 100644
--- a/os_dep/linux/ioctl_linux.c
+++ b/os_dep/linux/ioctl_linux.c
@@ -116,7 +116,7 @@ static void indicate_wx_custom_event(_adapter *padapter, char *msg)
 	wrqu.data.length = strlen(msg);
 
 	RTW_INFO("%s %s\n", __FUNCTION__, buff);
-#ifndef CONFIG_IOCTL_CFG80211
+#ifdef CONFIG_WIRELESS_EXT
 	wireless_send_event(padapter->pnetdev, IWEVCUSTOM, &wrqu, buff);
 #endif
 
@@ -149,7 +149,7 @@ static void request_wps_pbc_event(_adapter *padapter)
 
 	RTW_INFO("%s\n", __FUNCTION__);
 
-#ifndef CONFIG_IOCTL_CFG80211
+#ifdef CONFIG_WIRELESS_EXT
 	wireless_send_event(padapter->pnetdev, IWEVCUSTOM, &wrqu, buff);
 #endif
 
@@ -189,7 +189,7 @@ void indicate_wx_scan_complete_event(_adapter *padapter)
 	_rtw_memset(&wrqu, 0, sizeof(union iwreq_data));
 
 	/* RTW_INFO("+rtw_indicate_wx_scan_complete_event\n"); */
-#ifndef CONFIG_IOCTL_CFG80211
+#ifdef CONFIG_WIRELESS_EXT
 	wireless_send_event(padapter->pnetdev, SIOCGIWSCAN, &wrqu, NULL);
 #endif
 }
@@ -213,7 +213,7 @@ void rtw_indicate_wx_assoc_event(_adapter *padapter)
 		_rtw_memcpy(wrqu.ap_addr.sa_data, pmlmepriv->cur_network.network.MacAddress, ETH_ALEN);
 
 	RTW_PRINT("assoc success\n");
-#ifndef CONFIG_IOCTL_CFG80211
+#ifdef CONFIG_WIRELESS_EXT
 	wireless_send_event(padapter->pnetdev, SIOCGIWAP, &wrqu, NULL);
 #endif
 }
@@ -227,7 +227,7 @@ void rtw_indicate_wx_disassoc_event(_adapter *padapter)
 	wrqu.ap_addr.sa_family = ARPHRD_ETHER;
 	_rtw_memset(wrqu.ap_addr.sa_data, 0, ETH_ALEN);
 
-#ifndef CONFIG_IOCTL_CFG80211
+#ifdef CONFIG_WIRELESS_EXT
 	RTW_PRINT("indicate disassoc\n");
 	wireless_send_event(padapter->pnetdev, SIOCGIWAP, &wrqu, NULL);
 #endif
@@ -2943,7 +2943,7 @@ static int rtw_wx_set_auth(struct net_device *dev,
 	_adapter *padapter = (_adapter *)rtw_netdev_priv(dev);
 	struct iw_param *param = (struct iw_param *)&(wrqu->param);
 #ifdef CONFIG_WAPI_SUPPORT
-#ifndef CONFIG_IOCTL_CFG80211
+#ifdef CONFIG_WIRELESS_EXT
 	struct mlme_ext_priv	*pmlmeext = &padapter->mlmeextpriv;
 	struct mlme_ext_info	*pmlmeinfo = &(pmlmeext->mlmext_info);
 	struct security_priv *psecuritypriv = &padapter->securitypriv;
@@ -2956,7 +2956,7 @@ static int rtw_wx_set_auth(struct net_device *dev,
 
 	case IW_AUTH_WPA_VERSION:
 #ifdef CONFIG_WAPI_SUPPORT
-#ifndef CONFIG_IOCTL_CFG80211
+#ifdef CONFIG_WIRELESS_EXT
 		padapter->wapiInfo.bWapiEnable = false;
 		if (value == IW_AUTH_WAPI_VERSION_1) {
 			padapter->wapiInfo.bWapiEnable = true;
@@ -2978,7 +2978,7 @@ static int rtw_wx_set_auth(struct net_device *dev,
 		break;
 	case IW_AUTH_KEY_MGMT:
 #ifdef CONFIG_WAPI_SUPPORT
-#ifndef CONFIG_IOCTL_CFG80211
+#ifdef CONFIG_WIRELESS_EXT
 		RTW_INFO("rtw_wx_set_auth: IW_AUTH_KEY_MGMT case\n");
 		if (value == IW_AUTH_KEY_MGMT_WAPI_PSK)
 			padapter->wapiInfo.bWapiPSK = true;
@@ -3071,7 +3071,7 @@ static int rtw_wx_set_auth(struct net_device *dev,
 		break;
 
 #ifdef CONFIG_WAPI_SUPPORT
-#ifndef CONFIG_IOCTL_CFG80211
+#ifdef CONFIG_WIRELESS_EXT
 	case IW_AUTH_WAPI_ENABLED:
 		break;
 #endif
@@ -3129,7 +3129,7 @@ static int rtw_wx_set_enc_ext(struct net_device *dev,
 		break;
 #endif /* CONFIG_IEEE80211W */
 #ifdef CONFIG_WAPI_SUPPORT
-#ifndef CONFIG_IOCTL_CFG80211
+#ifdef CONFIG_WIRELESS_EXT
 	case IW_ENCODE_ALG_SM4:
 		alg_name = "SMS4";
 		_rtw_memcpy(param->sta_addr, pext->addr.sa_data, ETH_ALEN);
@@ -3162,11 +3162,11 @@ static int rtw_wx_set_enc_ext(struct net_device *dev,
 
 	if (pext->ext_flags & IW_ENCODE_EXT_RX_SEQ_VALID) {
 #ifdef CONFIG_WAPI_SUPPORT
-#ifndef CONFIG_IOCTL_CFG80211
+#ifdef CONFIG_WIRELESS_EXT
 		if (pext->alg == IW_ENCODE_ALG_SM4)
 			_rtw_memcpy(param->u.crypt.seq, pext->rx_seq, 16);
 		else
-#endif /* CONFIG_IOCTL_CFG80211 */
+#endif /* CONFIG_WIRELESS_EXT */
 #endif /* CONFIG_WAPI_SUPPORT */
 			_rtw_memcpy(param->u.crypt.seq, pext->rx_seq, 8);
 	}
diff --git a/os_dep/linux/mlme_linux.c b/os_dep/linux/mlme_linux.c
index 39c0ac1..6049f91 100644
--- a/os_dep/linux/mlme_linux.c
+++ b/os_dep/linux/mlme_linux.c
@@ -209,7 +209,7 @@ void rtw_report_sec_ie(_adapter *adapter, u8 authmode, u8 *sec_ie)
 
 		wrqu.data.length = (wrqu.data.length < IW_CUSTOM_MAX) ? wrqu.data.length : IW_CUSTOM_MAX;
 
-#ifndef CONFIG_IOCTL_CFG80211
+#ifdef CONFIG_WIRELESS_EXT
 		wireless_send_event(adapter->pnetdev, IWEVCUSTOM, &wrqu, buff);
 #endif
 
@@ -242,7 +242,7 @@ void rtw_indicate_sta_assoc_event(_adapter *padapter, struct sta_info *psta)
 
 	RTW_INFO("+rtw_indicate_sta_assoc_event\n");
 
-#ifndef CONFIG_IOCTL_CFG80211
+#ifdef CONFIG_WIRELESS_EXT
 	wireless_send_event(padapter->pnetdev, IWEVREGISTERED, &wrqu, NULL);
 #endif
 
@@ -269,7 +269,7 @@ void rtw_indicate_sta_disassoc_event(_adapter *padapter, struct sta_info *psta)
 
 	RTW_INFO("+rtw_indicate_sta_disassoc_event\n");
 
-#ifndef CONFIG_IOCTL_CFG80211
+#ifdef CONFIG_WIRELESS_EXT
 	wireless_send_event(padapter->pnetdev, IWEVEXPIRED, &wrqu, NULL);
 #endif
 
diff --git a/os_dep/linux/recv_linux.c b/os_dep/linux/recv_linux.c
index 632d32b..ea8cbed 100644
--- a/os_dep/linux/recv_linux.c
+++ b/os_dep/linux/recv_linux.c
@@ -585,7 +585,7 @@ void rtw_handle_tkip_mic_err(_adapter *padapter, struct sta_info *sta, u8 bgroup
 	_rtw_memset(&wrqu, 0x00, sizeof(wrqu));
 	wrqu.data.length = sizeof(ev);
 
-#ifndef CONFIG_IOCTL_CFG80211
+#ifdef CONFIG_WIRELESS_EXT
 	wireless_send_event(padapter->pnetdev, IWEVMICHAELMICFAILURE, &wrqu, (char *) &ev);
 #endif
 }
-- 
2.25.0

